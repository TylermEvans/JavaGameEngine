package renderEngine;

import org.lwjgl.opengl.GL15;
import org.lwjgl.opengl.GL30;

public class Loader {

	public RawModel loadToVAO(float[] positions){
		int vaoID = createVAO();
		storeDataInAttribList(0, positions);
		unbindVAO();
		return new RawModel(vaoID, positions.length/3);
	}
	
	private int createVAO(){
		int vaoID = GL30.glGenVertexArrays();
		GL30.glBindVertexArray(vaoID);
		return vaoID;
	}
	
	private void storeDataInAttribList(int attribNumber, float[] data){
		int vboID = GL15.glGenBuffers();
		GL15.glBindBuffer(GL15.GL_ARRAY_BUFFER, vboID);
		GL15.glBufferData(GL15.GL_ARRAY_BUFFER, data, GL15.GL_STATIC_DRAW);
		
	}
	
	private void unbindVAO(){
		GL30.glBindVertexArray(0);
	}
	private FloatBuffer storeDataInFloatBuffer(float[] data){
		FloatBuffer buffer = BufferUtils.createFloatBuffer(data)''
	}
	
}
